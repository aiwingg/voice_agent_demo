{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{RetellWebClient}from'retell-client-js-sdk';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[callActive,setCallActive]=useState(false);const retellClientRef=useRef(null);useEffect(()=>{// Initialize Retell client\nretellClientRef.current=new RetellWebClient();const client=retellClientRef.current;client.on(\"call_started\",()=>{console.log(\"Call started\");setCallActive(true);});client.on(\"call_ended\",()=>{console.log(\"Call ended\");setCallActive(false);});client.on(\"agent_start_talking\",()=>{console.log(\"Agent started talking\");});client.on(\"agent_stop_talking\",()=>{console.log(\"Agent stopped talking\");});client.on(\"update\",update=>{console.log(\"Update:\",update);});client.on(\"error\",error=>{console.error(\"An error occurred:\",error);client.stopCall();setCallActive(false);});// Cleanup on component unmount\nreturn()=>{client.stopCall();};},[]);// Fetch the web call token from your own server endpoint\nconst createWebCall=async()=>{try{const response=await fetch('/api/create-web-call',{// use relative URL for production\nmethod:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({metadata:{demo:true}})});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}return await response.json();}catch(error){console.error(\"Error creating web call on server:\",error);throw error;}};// Start or restart the call by stopping any existing call first\nconst startOrRestartCall=async()=>{try{if(callActive){console.log(\"Stopping current call...\");await retellClientRef.current.stopCall();// small delay to ensure call is fully stopped (optional)\nawait new Promise(resolve=>setTimeout(resolve,500));}console.log(\"Creating new web call...\");const callData=await createWebCall();console.log(\"Call data:\",callData);const accessToken=callData.access_token;await retellClientRef.current.startCall({accessToken,sampleRate:24000,// Optional: adjust as needed\ncaptureDeviceId:\"default\",// Optional: choose your mic device\nemitRawAudioSamples:false// Optional: disable raw audio sample events\n});}catch(error){console.error(\"Error starting/restarting call:\",error);}};return/*#__PURE__*/_jsxs(\"div\",{style:styles.container,children:[/*#__PURE__*/_jsxs(\"h1\",{style:styles.title,children:[\"Voice Agent Demo\",/*#__PURE__*/_jsx(\"br\",{}),\"for\",/*#__PURE__*/_jsx(\"br\",{}),\"Thrifty car rental\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:startOrRestartCall,style:styles.button,children:callActive?\"Restart Voice Agent\":\"ðŸŽ¤ Start Voice Agent\"})]});}const styles={container:{textAlign:'center',marginTop:'20vh'},title:{fontFamily:'Arial, sans-serif',lineHeight:1.5},button:{fontSize:'18px',padding:'12px 24px',marginTop:'20px',cursor:'pointer'}};export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","RetellWebClient","jsx","_jsx","jsxs","_jsxs","App","callActive","setCallActive","retellClientRef","current","client","on","console","log","update","error","stopCall","createWebCall","response","fetch","method","headers","body","JSON","stringify","metadata","demo","ok","Error","status","json","startOrRestartCall","Promise","resolve","setTimeout","callData","accessToken","access_token","startCall","sampleRate","captureDeviceId","emitRawAudioSamples","style","styles","container","children","title","onClick","button","textAlign","marginTop","fontFamily","lineHeight","fontSize","padding","cursor"],"sources":["/Users/da.akopyan/car_rental_demo/voice-agent-demo/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { RetellWebClient } from 'retell-client-js-sdk';\n\nfunction App() {\n  const [callActive, setCallActive] = useState(false);\n  const retellClientRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize Retell client\n    retellClientRef.current = new RetellWebClient();\n    const client = retellClientRef.current;\n\n    client.on(\"call_started\", () => {\n      console.log(\"Call started\");\n      setCallActive(true);\n    });\n\n    client.on(\"call_ended\", () => {\n      console.log(\"Call ended\");\n      setCallActive(false);\n    });\n\n    client.on(\"agent_start_talking\", () => {\n      console.log(\"Agent started talking\");\n    });\n\n    client.on(\"agent_stop_talking\", () => {\n      console.log(\"Agent stopped talking\");\n    });\n\n    client.on(\"update\", (update) => {\n      console.log(\"Update:\", update);\n    });\n\n    client.on(\"error\", (error) => {\n      console.error(\"An error occurred:\", error);\n      client.stopCall();\n      setCallActive(false);\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      client.stopCall();\n    };\n  }, []);\n\n  // Fetch the web call token from your own server endpoint\n  const createWebCall = async () => {\n    try {\n      const response = await fetch('/api/create-web-call', { // use relative URL for production\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ metadata: { demo: true } }),\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error creating web call on server:\", error);\n      throw error;\n    }\n  };\n\n  // Start or restart the call by stopping any existing call first\n  const startOrRestartCall = async () => {\n    try {\n      if (callActive) {\n        console.log(\"Stopping current call...\");\n        await retellClientRef.current.stopCall();\n        // small delay to ensure call is fully stopped (optional)\n        await new Promise(resolve => setTimeout(resolve, 500));\n      }\n      console.log(\"Creating new web call...\");\n      const callData = await createWebCall();\n      console.log(\"Call data:\", callData);\n      const accessToken = callData.access_token;\n      await retellClientRef.current.startCall({\n        accessToken,\n        sampleRate: 24000,         // Optional: adjust as needed\n        captureDeviceId: \"default\", // Optional: choose your mic device\n        emitRawAudioSamples: false, // Optional: disable raw audio sample events\n      });\n    } catch (error) {\n      console.error(\"Error starting/restarting call:\", error);\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.title}>\n        Voice Agent Demo<br />for<br />Thrifty car rental\n      </h1>\n      <button onClick={startOrRestartCall} style={styles.button}>\n        {callActive ? \"Restart Voice Agent\" : \"ðŸŽ¤ Start Voice Agent\"}\n      </button>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    textAlign: 'center',\n    marginTop: '20vh'\n  },\n  title: {\n    fontFamily: 'Arial, sans-serif',\n    lineHeight: 1.5,\n  },\n  button: {\n    fontSize: '18px',\n    padding: '12px 24px',\n    marginTop: '20px',\n    cursor: 'pointer'\n  }\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}